scalar DateTime

type Query {
    info: String!
    tasks: [Task!]!
    tasksById: [Task!]!
}

type Mutation {
    newTask(name: String!, body: String!, priority: String!, deadline: DateTime): Task!
    editTask(id: ID!, name: String, body: String, priority: String): Task!
    moveTask(id: ID!, taskState: Int!): Task!
    deleteTask(id: ID!): Task
    signup(name: String!, email: String!, password: String!): AuthPayLoad
    login(email: String!, password: String!): AuthPayLoad
}

type Task {
    id: ID!
    name: String!
    user: User!
    body: String!
    taskState: Int!
    priority: String!
    createdAt: DateTime!
    deadline: DateTime
    updatedAt: DateTime!
}

type User {
    id: ID!
    name: String!
    email: String!
    tasks: [Task!]!
}

type AuthPayLoad {
    token: String
    user: User
}
